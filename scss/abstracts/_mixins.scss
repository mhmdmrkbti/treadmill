// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin attention($self: false) {
  &:hover,
  &:focus {
    @content;
  }
}

/// Make a context based selector a little more friendly
/// @param {String} $element
@mixin element($element) {
  &__#{$element} {
    @content;
  }
}
/// @param {String} $modifier
@mixin modifier($modifier) {
  &--#{$modifier} {
    @content;
  }
}

/// set background-image
/// @param {String} $path
@mixin set-background-image($path) {
  background-image: url($url);
  filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src="#{$url}", sizingMethod='scale');
  -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='#{$url}', sizingMethod='scale')";
}

/// Absolute Positioning
/// @param {number} $X-ords
/// @param {number} $Y-ords
@mixin set-position($X-ords: 50%, $Y-ords: 50%) {
  position: absolute;
  top: $Y-ords;
  left: $X-ords;
  transform: translate(-$X-ords, -$Y-ords);
}

/// Flex Positioning
@mixin flex($direction: row, $justifyContent: center, $alignItems: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justifyContent;
  align-items: $alignItems;
}

///BreakPoint - Responsive Design Setup
@mixin breakpoint($args...) {
  @if length($args) == 1 {
    @media only screen and (min-width: nth($args , 1)) {
      @content;
    }
  } @else {
    @media only screen and (min-width: nth($args , 1)) and (max-width: nth($args , 2)) {
      @content;
    }
  }
}
